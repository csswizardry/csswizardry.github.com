///*------------------------------------*\
//    #MIXINS
//\*------------------------------------*/

// Spit out vendor prefixes in one go. Very pragmatic, far from perfect.
//
// Note that this no longer actually spits out any vendor prefixed properties
// anymore. I could go through the CSS removing usage of `@vendor`, but I’m lazy
// and fixing the problem here yields the same outcome.
@mixin vendor($property, $value...) {
  #{$property}: $value;
}

// Apply ‘attention’ styles in one go.
@mixin attention($self: false) {

    @if($self != false) {

        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }

    }

    @else {

        &:hover,
        &:active,
        &:focus {
            @content;
        }

    }

}

// Generate numbered font-weights from their aliases.
@mixin font-weight($font-weight) {

    @if ($font-weight == "light") {
        font-weight: 300;
    }

    @if ($font-weight == "regular") {
        font-weight: 400;
    }

    @if ($font-weight == "bold") {
        font-weight: 600;
    }

}

// Create all specified heading styles in one go.
@mixin headings($from: 1, $to: 6) {

    %base-heading {
        @content;
    }

    @if $from >= 1 and $to <= 6{

        @for $i from $from through $to{

            h#{$i} {
                @extend %base-heading;
            }

        }

    }

}

// Clearfix mixin for use later in the project
// ===========================================
@mixin clearfix() {

  &::after {
    content: "";
    display: table;
    clear: both;
  }

}
